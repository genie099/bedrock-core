#!/bin/bash
SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"
cd $SCRIPTPATH; cd ../../..
PLATFORM_NAME=$(basename `pwd`)
ENVIRONMENT=$1
TERRAFORM=$2
PLAN_FILE="$(mktemp)"

if [ "$ENVIRONMENT" == "" ] || [ "$TERRAFORM" == "" ]; then
  echo "Usage: $0 <command> <environment>"
  exit 1
fi

export $(grep -v '^#' infrastructure/deployment/$ENVIRONMENT/env.conf | xargs)

function plan() {
  terraform plan -var "project=$GCLOUD_PROJECT" -var "environment=$GCLOUD_ENV_NAME" -var "cluster_name=$GCLOUD_KUBERNETES_CLUSTER_NAME" -var-file=./$GCLOUD_ENV_NAME/variables.tfvars -out="${PLAN_FILE}"
}

if [ "$TERRAFORM" == "init" ]; then
  TERRAFORM_BUCKET=gs://$GCLOUD_BUCKET_PREFIX-terraform-system-state
  TERRAFORM_NOT_EXIST=$(gsutil ls "$TERRAFORM_BUCKET" 2>&1 > /dev/null)

  if [ "$TERRAFORM_NOT_EXIST" != "" ]; then
    echo "$TERRAFORM_BUCKET does not exist. Creating now.."
    gsutil mb -l us-east1 $TERRAFORM_BUCKET
  fi

  cd infrastructure/provisioning;
  terraform init -backend-config="bucket=${GCLOUD_BUCKET_PREFIX}-terraform-system-state" -backend-config="prefix=${CLOUD_ENV_NAME}"

elif [ "$TERRAFORM" == "plan" ]; then
  cd infrastructure/provisioning;
  plan
elif [ "$TERRAFORM" == "apply" ]; then
  cd infrastructure/provisioning;
  # Always execute plan before apply, to use the correct plan_file
  plan
  # terraform plan -var-file=./$GCLOUD_ENV_NAME/variables.tfvars -out="${PLAN_FILE}"
  terraform apply "${PLAN_FILE}"
else
  echo "Terraform command $TERRAFORM not supported"
fi
